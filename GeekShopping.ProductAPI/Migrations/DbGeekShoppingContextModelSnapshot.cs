// <auto-generated />
using GeekShopping.ProductAPI.Model.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GeekShopping.ProductAPI.Migrations
{
    [DbContext(typeof(DbGeekShoppingContext))]
    partial class DbGeekShoppingContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.11");

            modelBuilder.Entity("GeekShopping.ProductAPI.Model.Product", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("CategoryName")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasColumnName("CategoryName");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT")
                        .HasColumnName("Description");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(300)
                        .HasColumnType("TEXT")
                        .HasColumnName("ImageUrl");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("TEXT")
                        .HasColumnName("Name");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT")
                        .HasColumnName("Price");

                    b.HasKey("Id");

                    b.ToTable("Product");

                    b.HasData(
                        new
                        {
                            Id = 4L,
                            CategoryName = "Teste",
                            Description = "Teste de descrição",
                            ImageUrl = "https://teste.png",
                            Name = "Nome do produto teste",
                            Price = 69.9m
                        },
                        new
                        {
                            Id = 5L,
                            CategoryName = "Teste",
                            Description = "Teste de descrição 5",
                            ImageUrl = "https://teste5.png",
                            Name = "Nome do produto teste 5",
                            Price = 89.9m
                        },
                        new
                        {
                            Id = 6L,
                            CategoryName = "Teste",
                            Description = "Teste de descrição 6",
                            ImageUrl = "https://teste6.png",
                            Name = "Nome do produto teste 6",
                            Price = 43.4m
                        },
                        new
                        {
                            Id = 7L,
                            CategoryName = "Teste",
                            Description = "Teste de descrição 7",
                            ImageUrl = "https://teste7.png",
                            Name = "Nome do produto teste 7",
                            Price = 15.9m
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
